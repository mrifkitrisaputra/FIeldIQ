---
import data from "../../component/data/temp_1_data.json";
let searchQuery = "";
let currentPage = 1;
const entriesPerPage = 15;

const filterDatas = (query) => {
  searchQuery = query;
  currentPage = 1; // reset to the first page when searching
};

const paginateData = () => {
  const startIndex = (currentPage - 1) * entriesPerPage;
  const endIndex = startIndex + entriesPerPage;
  return data
    .filter((item) => {
      // your existing filtering logic here
    })
    .slice(startIndex, endIndex);
};

const getPageCount = () => {
  return Math.ceil(data.length / entriesPerPage);
};

const filterData = (query) => {
  searchQuery = query;
  data.filter((item) => {
    return (
      item.timestamp.toLowerCase().includes(query.toLowerCase()) ||
      item.device_id.toLowerCase().includes(query.toLowerCase()) ||
      item.value.toLowerCase().includes(query.toLowerCase()) ||
      item.type.toLowerCase().includes(query.toLowerCase())
    );
  });
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>

  <body>
    <div class="relative flex gap-3">
      <input
        class="mb-3 h-9 w-[23rem] rounded-lg border border-neutral-200 pl-10"
        type="text"
        id="searchInput"
        placeholder="Search Data..."
      />

      <select
        class="flex h-9 w-4 rounded-lg border border-neutral-200"
        id="entryCountSelect"
      >
        <option value="10">10</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
      <svg
        class="absolute left-2 top-1.5 mt-1 text-neutral-400"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="search">
          <path
            id="Vector"
            d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z"
            stroke="#828282"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            id="Vector_2"
            d="M21 20.9999L16.65 16.6499"
            stroke="#828282"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </g>
      </svg>
    </div>
    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
      <table
        class="table-sortable w-full text-left text-sm text-gray-500 dark:text-gray-400 rtl:text-right"
      >
        <thead
          class="bg-gray-50 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400"
        >
          <tr>
            <th
              scope="col"
              class="px-6 py-3"
              id="timeStampHeader"
              data-sort="timestamp"
            >
              <div class="flex items-center">
                Timestamp
                <a href="#"
                  ><svg
                    class="ms-1.5 h-3 w-3"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"
                    ></path>
                  </svg></a
                >
              </div>
            </th>
            <th
              scope="col"
              class="px-6 py-3"
              id="deviceIdHeader"
              data-sort="deviceId"
            >
              <div class="flex items-center">
                Device Id
                <a href="#"
                  ><svg
                    class="ms-1.5 h-3 w-3"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"
                    ></path>
                  </svg></a
                >
              </div>
            </th>
            <th
              scope="col"
              class="px-6 py-3"
              id="valueHeader"
              data-sort="value"
            >
              <div class="flex items-center">
                Value
                <a href="#"
                  ><svg
                    class="ms-1.5 h-3 w-3"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"
                    ></path>
                  </svg></a
                >
              </div>
            </th>
            <th scope="col" class="px-6 py-3" id="typeHeader" data-sort="type">
              <div class="flex items-center">
                Type
                <a href="#"
                  ><svg
                    class="ms-1.5 h-3 w-3"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"
                    ></path>
                  </svg></a
                >
              </div>
            </th>
            <th scope="col" class="px-6 py-3">
              <span class="sr-only">Edit</span>
            </th>
          </tr>
        </thead>
        <tbody>
          {
            data
              .filter((item) => {
                return (
                  item.timestamp
                    .toLowerCase()
                    .includes(searchQuery.toLowerCase()) ||
                  item.device_id
                    .toLowerCase()
                    .includes(searchQuery.toLowerCase()) ||
                  item.value
                    .toLowerCase()
                    .includes(searchQuery.toLowerCase()) ||
                  item.type.toLowerCase().includes(searchQuery.toLowerCase())
                );
              })
              .map((datas) => (
                <tr class="border-b odd:bg-white even:bg-gray-50 dark:border-gray-700 odd:dark:bg-gray-900 even:dark:bg-gray-800">
                  <th
                    scope="row"
                    class="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white"
                  >
                    {datas.timestamp}
                  </th>
                  <td class="px-6 py-4"> {datas.device_id} </td>
                  <td class="px-6 py-4"> {datas.value} </td>
                  <td class="px-6 py-4"> {datas.type} </td>
                  <td class="px-6 py-4 text-right"> </td>
                </tr>
              ))
          }
        </tbody>
      </table>
    </div>
  </body>
  <script>
    const filterData = (searchTerm: string) => {
      const tableRows = document.querySelectorAll("tbody tr");
      tableRows.forEach((row) => {
        const cells = row.querySelectorAll("td");
        const shouldShowRow = Array.from(cells).some((cell) =>
          cell.textContent.toLowerCase().includes(searchTerm.toLowerCase())
        );
        (row as HTMLTableRowElement).style.display = shouldShowRow
          ? ""
          : "none";
      });
    };

    const searchInput = document.getElementById(
      "searchInput"
    ) as HTMLInputElement;
    searchInput.addEventListener("input", () => {
      filterData(searchInput.value);
    });

    const entryCountSelect = document.getElementById(
      "entryCountSelect"
    ) as HTMLInputElement;
    entryCountSelect.addEventListener("change", () => {
      const tableRows = document.querySelectorAll("tbody tr");
      const entryCount = parseInt(entryCountSelect.value);

      tableRows.forEach((row, index) => {
        if (index < entryCount) {
          (row as HTMLTableRowElement).style.display = "";
        } else {
          (row as HTMLTableRowElement).style.display = "none";
        }
      });
    });
  </script>
</html>
